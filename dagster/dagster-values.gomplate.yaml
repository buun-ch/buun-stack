# Dagster Helm Chart Values
# Configuration for Dagster deployment

global:
  serviceAccountName: "dagster"
  postgresqlSecretName: "dagster-database-secret"

# Disable automatic PostgreSQL secret generation
generatePostgresqlPasswordSecret: false

dagsterWebserver:
  replicaCount: 1

  image:
    repository: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}"
    tag: "{{ .Env.DAGSTER_CONTAINER_TAG }}"
    pullPolicy: "{{ .Env.DAGSTER_CONTAINER_PULL_POLICY }}"

  service:
    type: ClusterIP
    port: 80

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

  {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
  extraPrependedInitContainers:
    - name: install-packages
      image: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}:{{ .Env.DAGSTER_CONTAINER_TAG }}"
      command:
        - /bin/bash
        - -c
        - |
          pip install --target /opt/dagster/site-packages {{ .Env.DAGSTER_EXTRA_PACKAGES }}
      volumeMounts:
        - name: extra-packages
          mountPath: /opt/dagster/site-packages
  {{- end }}

  env:
    - name: DAGSTER_HOME
      value: /opt/dagster/dagster_home
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: PYTHONPATH
      value: /opt/dagster/site-packages:/opt/dagster/user-code
    {{- else }}
    - name: PYTHONPATH
      value: /opt/dagster/user-code
    {{- end }}
    - name: PIP_USER
      value: "true"

  volumeMounts:
    - name: user-code
      mountPath: /opt/dagster/user-code
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: extra-packages
      mountPath: /opt/dagster/site-packages
    {{- end }}

  volumes:
    - name: user-code
      persistentVolumeClaim:
        claimName: dagster-user-code-pvc
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: extra-packages
      emptyDir: {}
    {{- end }}

  {{- if eq (.Env.DAGSTER_ENV_SECRETS_EXIST | default "false") "true" }}
  envSecrets:
    - name: dagster-env-secret
  {{- end }}

  workspace:
    enabled: true
    servers: []

dagsterDaemon:
  enabled: true

  image:
    repository: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}"
    tag: "{{ .Env.DAGSTER_CONTAINER_TAG }}"
    pullPolicy: "{{ .Env.DAGSTER_CONTAINER_PULL_POLICY }}"

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

  {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
  extraPrependedInitContainers:
    - name: install-packages
      image: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}:{{ .Env.DAGSTER_CONTAINER_TAG }}"
      command:
        - /bin/bash
        - -c
        - |
          pip install --target /opt/dagster/site-packages {{ .Env.DAGSTER_EXTRA_PACKAGES }}
      volumeMounts:
        - name: extra-packages
          mountPath: /opt/dagster/site-packages
  {{- end }}

  volumeMounts:
    - name: user-code
      mountPath: /opt/dagster/user-code
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: extra-packages
      mountPath: /opt/dagster/site-packages
    {{- end }}

  volumes:
    - name: user-code
      persistentVolumeClaim:
        claimName: dagster-user-code-pvc
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: extra-packages
      emptyDir: {}
    {{- end }}

  {{- if eq (.Env.DAGSTER_ENV_SECRETS_EXIST | default "false") "true" }}
  envSecrets:
    - name: dagster-env-secret
  {{- end }}

  env:
    - name: DAGSTER_HOME
      value: /opt/dagster/dagster_home
    {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
    - name: PYTHONPATH
      value: /opt/dagster/site-packages:/opt/dagster/user-code
    {{- else }}
    - name: PYTHONPATH
      value: /opt/dagster/user-code
    {{- end }}
    - name: PIP_USER
      value: "true"

runLauncher:
  type: K8sRunLauncher
  config:
    k8sRunLauncher:
      image:
        repository: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}"
        tag: "{{ .Env.DAGSTER_CONTAINER_TAG }}"
        pullPolicy: "{{ .Env.DAGSTER_CONTAINER_PULL_POLICY }}"
      jobNamespace: "{{ .Env.DAGSTER_NAMESPACE }}"
      loadInclusterConfig: true
      volumeMounts:
        - name: user-code
          mountPath: /opt/dagster/user-code
        {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
        - name: extra-packages
          mountPath: /opt/dagster/site-packages
        {{- end }}
      volumes:
        - name: user-code
          persistentVolumeClaim:
            claimName: dagster-user-code-pvc
        {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
        - name: extra-packages
          emptyDir: {}
        {{- end }}
      {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
      envVars:
        - "PYTHONPATH=/opt/dagster/site-packages:/opt/dagster/user-code"
      {{- end }}
      envSecrets:
        - name: dagster-database-secret
        {{- if eq (.Env.DAGSTER_STORAGE_TYPE | default "local") "minio" }}
        - name: dagster-minio-secret
        {{- end }}
        {{- if eq (.Env.DAGSTER_ENV_SECRETS_EXIST | default "false") "true" }}
        - name: dagster-env-secret
        {{- end }}
      {{- if .Env.DAGSTER_EXTRA_PACKAGES }}
      runK8sConfig:
        podSpecConfig:
          initContainers:
            - name: install-packages
              image: "{{ .Env.DAGSTER_CONTAINER_IMAGE }}:{{ .Env.DAGSTER_CONTAINER_TAG }}"
              command:
                - /bin/bash
                - -c
                - |
                  pip install --target /opt/dagster/site-packages {{ .Env.DAGSTER_EXTRA_PACKAGES }}
              volumeMounts:
                - name: extra-packages
                  mountPath: /opt/dagster/site-packages
      {{- end }}

postgresql:
  enabled: false
  postgresqlHost: "postgres-cluster-rw.postgres.svc.cluster.local"
  postgresqlUsername: "dagster"
  postgresqlPassword: ""
  postgresqlDatabase: "dagster"
  service:
    port: 5432

userDeployments:
  enabled: false

dagster-user-deployments:
  enabled: true
  enableSubchart: false
  deployments: []

{{- if eq (.Env.DAGSTER_STORAGE_TYPE | default "local") "minio" }}
computeLogManager:
  type: S3ComputeLogManager
  config:
    s3ComputeLogManager:
      bucket: "dagster-logs"
      region: "us-east-1"
      endpointUrl: "http://minio.{{ .Env.MINIO_NAMESPACE }}.svc.cluster.local:9000"
      useSSL: false
      secretName: "dagster-minio-secret"
{{- else }}
computeLogManager:
  type: NoOpComputeLogManager
{{- end }}

dagsterHome: "/opt/dagster/dagster_home"

serviceAccount:
  create: true
  name: "dagster"

rbac:
  create: true